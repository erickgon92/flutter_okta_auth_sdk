pluginManagement {
    def flutterSdkPath
    def localPropertiesFile = new File(settingsDir, "local.properties")
    if (localPropertiesFile.exists()) {
        Properties properties = new Properties()
        localPropertiesFile.withReader("UTF-8") { reader -> properties.load(reader) }
        flutterSdkPath = properties.getProperty("flutter.sdk")
    }

    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
        if (flutterSdkPath != null) {
            maven {
                url "${flutterSdkPath}/packages/flutter_tools/gradle/"
            }
        }
    }
}

dependencyResolutionManagement {
    repositoriesMode.set(RepositoriesMode.PREFER_SETTINGS)
    repositories {
        google()
        mavenCentral()
    }
}

include ':app'

def localPropertiesFile = new File(settingsDir, "local.properties")
def properties = new Properties()

assert localPropertiesFile.exists()
localPropertiesFile.withReader("UTF-8") { reader -> properties.load(reader) }

def flutterSdkPath = properties.getProperty("flutter.sdk")
assert flutterSdkPath != null, "flutter.sdk not set in local.properties"

// Include Flutter plugins
def flutterProjectRoot = rootProject.projectDir.parentFile.toPath()
def plugins = new Properties()
def pluginsFile = new File(flutterProjectRoot.toFile(), '.flutter-plugins')
if (pluginsFile.exists()) {
    pluginsFile.withReader('UTF-8') { reader -> plugins.load(reader) }
}

plugins.each { name, path ->
    def pluginDirectory = flutterProjectRoot.resolve(path).resolve('android').toFile()
    include ":$name"
    project(":$name").projectDir = pluginDirectory
}
